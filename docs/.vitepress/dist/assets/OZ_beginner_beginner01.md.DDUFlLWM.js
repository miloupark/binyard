import{_ as o,c as r,j as e,a,G as t,ag as n,B as d,o as c}from"./chunks/framework.CJ72e6E2.js";const h="/assets/beginner01.DPJ9__6D.png",I=JSON.parse('{"title":"💻 CLI 환경 알아보기","description":"","frontmatter":{},"headers":[],"relativePath":"OZ/beginner/beginner01.md","filePath":"OZ/beginner/beginner01.md"}'),s={name:"OZ/beginner/beginner01.md"},u={id:"💻-cli-환경-알아보기",tabindex:"-1"};function m(b,l,p,f,q,g){const i=d("Badge");return c(),r("div",null,[e("h1",u,[l[0]||(l[0]=a("💻 CLI 환경 알아보기 ")),t(i,{type:"info",text:"250622"}),l[1]||(l[1]=a()),l[2]||(l[2]=e("a",{class:"header-anchor",href:"#💻-cli-환경-알아보기","aria-label":'Permalink to "💻 CLI 환경 알아보기 <Badge type="info" text="250622" />"'},"​",-1))]),l[3]||(l[3]=n('<h2 id="🤔-터미널이란" tabindex="-1">🤔 터미널이란? <a class="header-anchor" href="#🤔-터미널이란" aria-label="Permalink to &quot;🤔 터미널이란?&quot;">​</a></h2><h3 id="터미널-terminal" tabindex="-1">터미널 (Terminal) <a class="header-anchor" href="#터미널-terminal" aria-label="Permalink to &quot;터미널 (Terminal)&quot;">​</a></h3><ul><li>사용자와 컴퓨터가 텍스트 기반으로 소통하는 명령줄 인터페이스(Command Line Interface, CLI)</li><li>사용자는 명령어를 입력해 파일 탐색, 프로그램 실행, 시스템 설정 등 다양한 작업을 수행할 수 있다.</li></ul><br><h3 id="터미널의-정의" tabindex="-1">터미널의 정의 <a class="header-anchor" href="#터미널의-정의" aria-label="Permalink to &quot;터미널의 정의&quot;">​</a></h3><ul><li>터미널은 사용자가 텍스트 명령어를 입력할 수 있는 환경으로, 입력된 명령은 운영체제의 쉘(Shell)을 통해 해석되고 실행된다. 쉘은 사용자와 운영체제의 핵심인 커널(Kernel) 사이에서 명령을 중계하는 역할을 한다.</li><li>터미널에서 사용되는 명령어는 파일 관리, 프로세스 제어, 네트워크 설정 등 다양한 작업을 수행할 수 있으며, 시스템 자원에 깊이 접근하고 정밀하게 제어할 수 있는 강력한 도구이다.</li></ul><details class="details custom-block"><summary>쉘(Shell)과 커널(Kernel)</summary><p><code>쉘(Shell)</code></p><ul><li>정의: 사용자가 입력한 명령어를 해석하고, 이를 커널에 전달하는 프로그램</li><li>기능: <ul><li>명령어 해석 (Command parsing)</li><li>명령 실행 (Execute or forward to kernel)</li><li>입력/출력 처리</li><li>스크립트 실행 (쉘 스크립트)</li></ul></li><li>종류: Bash, Zsh, Fish, Ksh 등</li></ul><p><code>커널(Kernel)</code></p><ul><li>정의: 커널은 운영체제의 핵심(Core)으로, 하드웨어와 직접 소통하며 시스템 전체를 관리하는 컴퓨터의 뇌이자 중앙관리자</li><li>기능: <ul><li>하드웨어 제어 (CPU, 메모리, 디스크 등)</li><li>프로세스 관리 (프로그램 실행과 전환)</li><li>메모리 관리 (사용 가능한 메모리 할당)</li><li>파일 시스템 관리</li><li>입출력(I/O) 관리</li></ul></li></ul><p><code>작동흐름</code></p><ol><li>사용자가 터미널에 명령어 입력</li><li>쉘이 명령어를 해석하고 커널에 요청</li><li>커널이 하드웨어에 명령을 내려 실행</li></ol></details><br><h3 id="cli-vs-gui" tabindex="-1">CLI vs GUI <a class="header-anchor" href="#cli-vs-gui" aria-label="Permalink to &quot;CLI vs GUI&quot;">​</a></h3><h4 id="cli-command-line-interface" tabindex="-1">CLI (Command Line Interface) <a class="header-anchor" href="#cli-command-line-interface" aria-label="Permalink to &quot;CLI (Command Line Interface)&quot;">​</a></h4><ul><li>텍스트 기반 명령어 인터페이스로, 사용자가 키보드로 명령어를 직접 입력해 시스템을 제어한다.</li><li>명령어 입력 결과도 텍스트 형태로 출력되며, 복잡한 작업이나 반복적인 작업을 간단하고 효율적으로 처리할 수 있다.</li></ul><h4 id="gui-graphical-user-interface" tabindex="-1">GUI (Graphical User Interface) <a class="header-anchor" href="#gui-graphical-user-interface" aria-label="Permalink to &quot;GUI (Graphical User Interface)&quot;">​</a></h4><ul><li>마우스 등의 포인팅 장치를 사용해 아이콘, 버튼, 창 등 시각적 요소를 클릭하여 시스템을 제어하는 방식이다.</li><li>사용자는 복잡한 명령어를 몰라도 직관적인 조작이 가능하여 초보자에게 친숙하다.</li><li>하지만, 자동화나 대규모 시스템 관리에는 CLI에 비해 제한적일 수 있다.</li></ul><br><h3 id="cli를-배워야-하는-이유" tabindex="-1">CLI를 배워야 하는 이유 <a class="header-anchor" href="#cli를-배워야-하는-이유" aria-label="Permalink to &quot;CLI를 배워야 하는 이유&quot;">​</a></h3><ol><li>다양한 개발 도구와 프레임워크가 CLI 기반으로 동작한다.</li><li>서버 관리는 대부분 CLI 환경에서 이루어진다.</li><li>자동화와 반복 작업에 탁월하다.</li><li>가볍고 빠르며 리소스 소모가 적다.</li><li>명령어 조합을 통해 유연한 작업 흐름을 만든다.</li><li>GUI보다 더 많은 기능과 세부 제어가 가능하다.</li></ol><h2 id="운영체제-별-터미널" tabindex="-1">운영체제 별 터미널 <a class="header-anchor" href="#운영체제-별-터미널" aria-label="Permalink to &quot;운영체제 별 터미널&quot;">​</a></h2><h3 id="mac에서-터미널-실행-방법" tabindex="-1">MAC에서 터미널 실행 방법 <a class="header-anchor" href="#mac에서-터미널-실행-방법" aria-label="Permalink to &quot;MAC에서 터미널 실행 방법&quot;">​</a></h3><ul><li><p>실행방법</p><ol><li>애플 메뉴 또는 Finder에서 응용 프로그램 &gt; 유틸리티 &gt; 터미널을 찾아 실행</li><li>Command + Space를 눌러 Spotlight 검색창에 &quot;터미널&quot; 입력 후 실행</li></ol></li><li><p>특징</p><ol><li>기본 쉘은 Bash 또는 Zsh를 사용</li><li>유닉스 기반으로 리눅스와 유사한 명령어 환경 제공</li><li>GUI 기반인 MacOS에서도 터미널을 통해 효율적인 명령어 작업 가능</li></ol></li></ul><h2 id="터미널-기초-명령어" tabindex="-1">터미널 기초 명령어 <a class="header-anchor" href="#터미널-기초-명령어" aria-label="Permalink to &quot;터미널 기초 명령어&quot;">​</a></h2><h3 id="파일-및-디렉토리-관리" tabindex="-1">파일 및 디렉토리 관리 <a class="header-anchor" href="#파일-및-디렉토리-관리" aria-label="Permalink to &quot;파일 및 디렉토리 관리&quot;">​</a></h3><ul><li><code>ls</code> : 디렉토리 내 파일과 폴더 목록 보기 <br></li><li><code>cd</code> : 디렉토리 이동</li><li><code>mkdir</code> : 새 디렉토리 생성</li><li><code>echo</code> : 텍스트를 파일로 저장 (파일 생성 및 내용 작성)</li><li><code>cp</code> : 파일 복사</li><li><code>rm</code> : 파일 삭제 (디렉토리 삭제 시 <code>rm -r</code>)</li></ul><h3 id="파일-내용-보기-및-텍스트-처리" tabindex="-1">파일 내용 보기 및 텍스트 처리 <a class="header-anchor" href="#파일-내용-보기-및-텍스트-처리" aria-label="Permalink to &quot;파일 내용 보기 및 텍스트 처리&quot;">​</a></h3><ul><li><code>cat</code> : 파일 내용을 터미널에 출력</li><li><code>echo</code> : 텍스트 출력</li></ul><h3 id="디렉토리-및-파일-정보" tabindex="-1">디렉토리 및 파일 정보 <a class="header-anchor" href="#디렉토리-및-파일-정보" aria-label="Permalink to &quot;디렉토리 및 파일 정보&quot;">​</a></h3><ul><li><code>pwd</code> : 현재 작업 디렉토리 표시</li><li><code>clear</code> : 터미널 화면 지우기</li></ul><h3 id="프로세스-관리" tabindex="-1">프로세스 관리 <a class="header-anchor" href="#프로세스-관리" aria-label="Permalink to &quot;프로세스 관리&quot;">​</a></h3><ul><li><code>ps</code> : 현재 실행중인 프로세스 목록 보기</li><li><code>kill</code> : 특정 프로세스 종료</li></ul><h3 id="네트워크-작업" tabindex="-1">네트워크 작업 <a class="header-anchor" href="#네트워크-작업" aria-label="Permalink to &quot;네트워크 작업&quot;">​</a></h3><ul><li><code>ping</code> : 네트워크 연결 상태 테스트</li></ul><h3 id="환경-변수-관리" tabindex="-1">환경 변수 관리 <a class="header-anchor" href="#환경-변수-관리" aria-label="Permalink to &quot;환경 변수 관리&quot;">​</a></h3><ul><li><code>$PATH</code> : 시스템 경로 변수 확인</li><li><code>export</code> : 환경 변수 설정</li></ul><h2 id="실습-과제" tabindex="-1">실습 과제 <a class="header-anchor" href="#실습-과제" aria-label="Permalink to &quot;실습 과제&quot;">​</a></h2><p><img src="'+h+'" alt="beginner01"></p>',34))])}const k=o(s,[["render",m]]);export{I as __pageData,k as default};
